{"metadata":{"roleHeading":"Article","title":"User authorization and management","modules":[{"name":"OneEntry"}],"role":"article"},"variants":[{"paths":["\/documentation\/oneentry\/authorization"],"traits":[{"interfaceLanguage":"swift"}]}],"identifier":{"url":"doc:\/\/OneEntry\/documentation\/OneEntry\/Authorization","interfaceLanguage":"swift"},"hierarchy":{"paths":[["doc:\/\/OneEntry\/documentation\/OneEntry","doc:\/\/OneEntry\/documentation\/OneEntry\/AuthUsage"]]},"schemaVersion":{"major":0,"minor":3,"patch":0},"abstract":[{"type":"text","text":"Management of user data such as password, names, etc."}],"seeAlsoSections":[{"title":"User authorization and management","anchor":"User-authorization-and-management","identifiers":["doc:\/\/OneEntry\/documentation\/OneEntry\/Registration","doc:\/\/OneEntry\/documentation\/OneEntry\/ForgotPassword"],"generated":true}],"sections":[],"primaryContentSections":[{"kind":"content","content":[{"anchor":"Overview","text":"Overview","type":"heading","level":2},{"inlineContent":[{"type":"text","text":"User authorization works on the principle of token exchange."},{"text":" ","type":"text"},{"type":"text","text":"For the sake of simplicity, hide this process under the hood of the sdk. On"},{"type":"text","text":" "},{"type":"text","text":"You always have the opportunity to get all the data for more detailed configuration."},{"type":"text","text":" "},{"type":"text","text":"Tokens are automatically saved in a keychain to implement auto login."}],"type":"paragraph"},{"level":2,"text":"Authorization","anchor":"Authorization","type":"heading"},{"code":["let email = \"oneentry@sample.com\"","try await AuthService.shared.auth(\"email\") {","    AuthData(marker: \"email_auth\", value: email)","    AuthData(marker: \"pass_auth\", value: \"password\")","}"],"syntax":"swift","type":"codeListing"},{"type":"paragraph","inlineContent":[{"type":"text","text":"This method performs obtaining authorization tokens. SDK independently monitor their relevance."}]},{"text":"Getting a user","level":2,"anchor":"Getting-a-user","type":"heading"},{"style":"important","name":"Important","content":[{"inlineContent":[{"type":"text","text":"The method for obtaining user information is available only after successful authorization via sdk"}],"type":"paragraph"}],"type":"aside"},{"type":"codeListing","syntax":"swift","code":["let user = try await AuthService.shared.user"]},{"type":"heading","anchor":"Logout","level":2,"text":"Logout"},{"inlineContent":[{"type":"text","text":"In fact, the output can be implemented in different ways and without this method."},{"text":" ","type":"text"},{"type":"text","text":"However, its call is necessary to cancel authorization tokens"}],"type":"paragraph"},{"name":"Important","type":"aside","style":"important","content":[{"type":"paragraph","inlineContent":[{"type":"text","text":"The method for obtaining user information is available only after successful authorization via sdk"}]}]},{"code":["let success = try await AuthService.shared.logout()"],"syntax":"swift","type":"codeListing"},{"anchor":"Changing-user-data","type":"heading","level":2,"text":"Changing user data"},{"type":"paragraph","inlineContent":[{"type":"text","text":"The method helps to change any data, including the password."}]},{"content":[{"type":"paragraph","inlineContent":[{"type":"text","text":"The method for obtaining user information is available only after successful authorization via sdk"}]}],"type":"aside","style":"important","name":"Important"},{"syntax":"swift","code":["let success = try await service.changeUser(form: \"email_auth\", langCode: \"en_US\") {","    AuthDataContainer {","        AuthData(","            marker: \"pass_auth\",","            value: \"password\"","        )","    }","    ","    FormDataContainer {","        FormData(","            marker: \"name_auth\",","            value: \"Arthur\"","        )","    }","}"],"type":"codeListing"}]}],"kind":"article","references":{"doc://OneEntry/documentation/OneEntry/AuthUsage":{"url":"\/documentation\/oneentry\/authusage","abstract":[{"type":"text","text":"OneEntry supports user creation and control. This can be useful for creating various kinds of content such as bonus programs, delivery addresses, etc."}],"kind":"article","identifier":"doc:\/\/OneEntry\/documentation\/OneEntry\/AuthUsage","type":"topic","title":"AuthService","role":"collectionGroup"},"doc://OneEntry/documentation/OneEntry/ForgotPassword":{"identifier":"doc:\/\/OneEntry\/documentation\/OneEntry\/ForgotPassword","kind":"article","type":"topic","role":"collectionGroup","title":"Changing the password in case of loss of access to the account","abstract":[{"text":"Changing the password in case the user has forgotten it","type":"text"}],"url":"\/documentation\/oneentry\/forgotpassword"},"doc://OneEntry/documentation/OneEntry":{"url":"\/documentation\/oneentry","kind":"symbol","abstract":[{"type":"text","text":"Simplifying Mobile App Development in Swift with OneEntry SDK"}],"title":"OneEntry","identifier":"doc:\/\/OneEntry\/documentation\/OneEntry","images":[{"identifier":"oneentry-logo.png","type":"icon"}],"type":"topic","role":"collection"},"doc://OneEntry/documentation/OneEntry/Registration":{"url":"\/documentation\/oneentry\/registration","type":"topic","identifier":"doc:\/\/OneEntry\/documentation\/OneEntry\/Registration","title":"User registration and activation","role":"article","abstract":[{"text":"Registration and activation of new users. Verification using activation code.","type":"text"}],"kind":"article"},"oneentry-logo.png":{"variants":[{"url":"\/images\/OneEntry\/oneentry-logo@2x.png","traits":["2x","light"]}],"alt":"A technology icon representing the SlothCreator framework.","identifier":"oneentry-logo.png","type":"image"}}}