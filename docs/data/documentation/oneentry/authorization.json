{"schemaVersion":{"patch":0,"minor":3,"major":0},"sections":[],"kind":"article","seeAlsoSections":[{"identifiers":["doc:\/\/OneEntry\/documentation\/OneEntry\/Registration","doc:\/\/OneEntry\/documentation\/OneEntry\/ForgotPassword"],"generated":true,"anchor":"User-authorization-and-management","title":"User authorization and management"}],"variants":[{"traits":[{"interfaceLanguage":"swift"}],"paths":["\/documentation\/oneentry\/authorization"]}],"identifier":{"url":"doc:\/\/OneEntry\/documentation\/OneEntry\/Authorization","interfaceLanguage":"swift"},"hierarchy":{"paths":[["doc:\/\/OneEntry\/documentation\/OneEntry","doc:\/\/OneEntry\/documentation\/OneEntry\/AuthUsage"]]},"metadata":{"roleHeading":"Article","title":"User authorization and management","role":"article","modules":[{"name":"OneEntry"}]},"primaryContentSections":[{"kind":"content","content":[{"text":"Overview","anchor":"Overview","type":"heading","level":2},{"inlineContent":[{"text":"User authorization works on the principle of token exchange.","type":"text"},{"type":"text","text":" "},{"type":"text","text":"For the sake of simplicity, hide this process under the hood of the sdk. On"},{"type":"text","text":" "},{"text":"You always have the opportunity to get all the data for more detailed configuration.","type":"text"},{"text":" ","type":"text"},{"text":"Tokens are automatically saved in a keychain to implement auto login.","type":"text"}],"type":"paragraph"},{"level":2,"anchor":"Authorization","type":"heading","text":"Authorization"},{"code":["let email = \"oneentry@sample.com\"","try await AuthService.shared.auth(\"email\") {","    AuthData(marker: \"email_auth\", value: email)","    AuthData(marker: \"pass_auth\", value: \"password\")","}"],"type":"codeListing","syntax":"swift"},{"inlineContent":[{"text":"This method performs obtaining authorization tokens. SDK independently monitor their relevance.","type":"text"}],"type":"paragraph"},{"level":2,"type":"heading","anchor":"Getting-a-user","text":"Getting a user"},{"style":"important","content":[{"inlineContent":[{"type":"text","text":"The method for obtaining user information is available only after successful authorization via sdk"}],"type":"paragraph"}],"type":"aside","name":"Important"},{"syntax":"swift","code":["let user = try await AuthService.shared.user"],"type":"codeListing"},{"anchor":"Logout","type":"heading","level":2,"text":"Logout"},{"inlineContent":[{"type":"text","text":"In fact, the output can be implemented in different ways and without this method."},{"type":"text","text":" "},{"text":"However, its call is necessary to cancel authorization tokens","type":"text"}],"type":"paragraph"},{"name":"Important","style":"important","type":"aside","content":[{"inlineContent":[{"type":"text","text":"The method for obtaining user information is available only after successful authorization via sdk"}],"type":"paragraph"}]},{"type":"codeListing","syntax":"swift","code":["let success = try await AuthService.shared.logout()"]},{"level":2,"anchor":"Changing-user-data","text":"Changing user data","type":"heading"},{"inlineContent":[{"type":"text","text":"The method helps to change any data, including the password."}],"type":"paragraph"},{"type":"aside","style":"important","name":"Important","content":[{"type":"paragraph","inlineContent":[{"type":"text","text":"The method for obtaining user information is available only after successful authorization via sdk"}]}]},{"code":["let success = try await service.changeUser(form: \"email_auth\", langCode: \"en_US\") {","    AuthDataContainer {","        AuthData(","            marker: \"pass_auth\",","            value: \"password\"","        )","    }","    ","    FormDataContainer {","        FormData(","            marker: \"name_auth\",","            value: \"Arthur\"","        )","    }","}"],"type":"codeListing","syntax":"swift"}]}],"abstract":[{"type":"text","text":"Management of user data such as password, names, etc."}],"references":{"doc://OneEntry/documentation/OneEntry/ForgotPassword":{"type":"topic","abstract":[{"text":"Changing the password in case the user has forgotten it","type":"text"}],"url":"\/documentation\/oneentry\/forgotpassword","title":"Changing the password in case of loss of access to the account","role":"collectionGroup","identifier":"doc:\/\/OneEntry\/documentation\/OneEntry\/ForgotPassword","kind":"article"},"oneentry-logo.png":{"alt":"A technology icon representing the SlothCreator framework.","identifier":"oneentry-logo.png","variants":[{"traits":["2x","light"],"url":"\/images\/OneEntry\/oneentry-logo@2x.png"}],"type":"image"},"doc://OneEntry/documentation/OneEntry/AuthUsage":{"kind":"article","url":"\/documentation\/oneentry\/authusage","type":"topic","abstract":[{"type":"text","text":"OneEntry supports user creation and control. This can be useful for creating various kinds of content such as bonus programs, delivery addresses, etc."}],"title":"AuthService","identifier":"doc:\/\/OneEntry\/documentation\/OneEntry\/AuthUsage","role":"collectionGroup"},"doc://OneEntry/documentation/OneEntry/Registration":{"role":"article","url":"\/documentation\/oneentry\/registration","type":"topic","abstract":[{"text":"Registration and activation of new users. Verification using activation code.","type":"text"}],"title":"User registration and activation","identifier":"doc:\/\/OneEntry\/documentation\/OneEntry\/Registration","kind":"article"},"doc://OneEntry/documentation/OneEntry":{"role":"collection","kind":"symbol","identifier":"doc:\/\/OneEntry\/documentation\/OneEntry","type":"topic","images":[{"identifier":"oneentry-logo.png","type":"icon"}],"url":"\/documentation\/oneentry","abstract":[{"text":"Simplifying Mobile App Development in Swift with OneEntry SDK","type":"text"}],"title":"OneEntry"}}}