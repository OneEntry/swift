{"kind":"article","schemaVersion":{"minor":3,"patch":0,"major":0},"sections":[],"metadata":{"title":"User authorization and management","roleHeading":"Article","modules":[{"name":"OneEntry"}],"role":"article"},"hierarchy":{"paths":[["doc:\/\/OneEntry\/documentation\/OneEntry","doc:\/\/OneEntry\/documentation\/OneEntry\/AuthUsage"]]},"abstract":[{"text":"Management of user data such as password, names, etc.","type":"text"}],"primaryContentSections":[{"kind":"content","content":[{"level":2,"text":"Overview","anchor":"Overview","type":"heading"},{"inlineContent":[{"type":"text","text":"User authorization works on the principle of token exchange."},{"type":"text","text":" "},{"text":"For the sake of simplicity, hide this process under the hood of the sdk. On","type":"text"},{"type":"text","text":" "},{"text":"You always have the opportunity to get all the data for more detailed configuration.","type":"text"},{"text":" ","type":"text"},{"type":"text","text":"Tokens are automatically saved in a keychain to implement auto login."}],"type":"paragraph"},{"level":2,"type":"heading","anchor":"Authorization","text":"Authorization"},{"type":"codeListing","syntax":"swift","code":["let email = \"oneentry@sample.com\"","try await AuthService.shared.auth(\"email\") {","    AuthData(marker: \"email_auth\", value: email)","    AuthData(marker: \"pass_auth\", value: \"password\")","}"]},{"type":"paragraph","inlineContent":[{"text":"This method performs obtaining authorization tokens. SDK independently monitor their relevance.","type":"text"}]},{"type":"heading","level":2,"text":"Getting a user","anchor":"Getting-a-user"},{"name":"Important","type":"aside","style":"important","content":[{"inlineContent":[{"text":"The method for obtaining user information is available only after successful authorization via sdk","type":"text"}],"type":"paragraph"}]},{"code":["let user = try await AuthService.shared.user"],"type":"codeListing","syntax":"swift"},{"level":2,"text":"Logout","anchor":"Logout","type":"heading"},{"inlineContent":[{"text":"In fact, the output can be implemented in different ways and without this method.","type":"text"},{"type":"text","text":" "},{"text":"However, its call is necessary to cancel authorization tokens","type":"text"}],"type":"paragraph"},{"name":"Important","style":"important","content":[{"inlineContent":[{"text":"The method for obtaining user information is available only after successful authorization via sdk","type":"text"}],"type":"paragraph"}],"type":"aside"},{"type":"codeListing","syntax":"swift","code":["let success = try await AuthService.shared.logout()"]},{"type":"heading","anchor":"Changing-user-data","level":2,"text":"Changing user data"},{"type":"paragraph","inlineContent":[{"text":"The method helps to change any data, including the password.","type":"text"}]},{"style":"important","type":"aside","name":"Important","content":[{"type":"paragraph","inlineContent":[{"text":"The method for obtaining user information is available only after successful authorization via sdk","type":"text"}]}]},{"syntax":"swift","code":["let success = try await service.changeUser(form: \"email_auth\", langCode: \"en_US\") {","    AuthDataContainer {","        AuthData(","            marker: \"pass_auth\",","            value: \"password\"","        )","    }","    ","    FormDataContainer {","        FormData(","            marker: \"name_auth\",","            value: \"Arthur\"","        )","    }","}"],"type":"codeListing"}]}],"seeAlsoSections":[{"title":"User authorization and management","identifiers":["doc:\/\/OneEntry\/documentation\/OneEntry\/Registration","doc:\/\/OneEntry\/documentation\/OneEntry\/ForgotPassword"],"generated":true,"anchor":"User-authorization-and-management"}],"variants":[{"traits":[{"interfaceLanguage":"swift"}],"paths":["\/documentation\/oneentry\/authorization"]}],"identifier":{"url":"doc:\/\/OneEntry\/documentation\/OneEntry\/Authorization","interfaceLanguage":"swift"},"references":{"doc://OneEntry/documentation/OneEntry":{"url":"\/documentation\/oneentry","images":[{"type":"icon","identifier":"oneentry-logo.png"}],"abstract":[{"type":"text","text":"Simplifying Mobile App Development in Swift with OneEntry SDK"}],"kind":"symbol","role":"collection","identifier":"doc:\/\/OneEntry\/documentation\/OneEntry","type":"topic","title":"OneEntry"},"doc://OneEntry/documentation/OneEntry/ForgotPassword":{"type":"topic","role":"collectionGroup","identifier":"doc:\/\/OneEntry\/documentation\/OneEntry\/ForgotPassword","abstract":[{"type":"text","text":"Changing the password in case the user has forgotten it"}],"kind":"article","url":"\/documentation\/oneentry\/forgotpassword","title":"Changing the password in case of loss of access to the account"},"doc://OneEntry/documentation/OneEntry/Registration":{"identifier":"doc:\/\/OneEntry\/documentation\/OneEntry\/Registration","kind":"article","type":"topic","title":"User registration and activation","role":"article","abstract":[{"text":"Registration and activation of new users. Verification using activation code.","type":"text"}],"url":"\/documentation\/oneentry\/registration"},"doc://OneEntry/documentation/OneEntry/AuthUsage":{"title":"AuthService","abstract":[{"text":"OneEntry supports user creation and control. This can be useful for creating various kinds of content such as bonus programs, delivery addresses, etc.","type":"text"}],"identifier":"doc:\/\/OneEntry\/documentation\/OneEntry\/AuthUsage","url":"\/documentation\/oneentry\/authusage","kind":"article","type":"topic","role":"collectionGroup"},"oneentry-logo.png":{"type":"image","alt":"A technology icon representing the SlothCreator framework.","variants":[{"url":"\/images\/OneEntry\/oneentry-logo@2x.png","traits":["2x","light"]}],"identifier":"oneentry-logo.png"}}}