{"schemaVersion":{"patch":0,"minor":3,"major":0},"kind":"article","identifier":{"url":"doc:\/\/OneEntry\/documentation\/OneEntry\/Authorization","interfaceLanguage":"swift"},"metadata":{"role":"article","roleHeading":"Article","modules":[{"name":"OneEntry"}],"title":"User authorization and management"},"sections":[],"seeAlsoSections":[{"generated":true,"anchor":"User-authorization-and-management","title":"User authorization and management","identifiers":["doc:\/\/OneEntry\/documentation\/OneEntry\/Registration","doc:\/\/OneEntry\/documentation\/OneEntry\/ForgotPassword"]}],"hierarchy":{"paths":[["doc:\/\/OneEntry\/documentation\/OneEntry","doc:\/\/OneEntry\/documentation\/OneEntry\/AuthUsage"]]},"variants":[{"traits":[{"interfaceLanguage":"swift"}],"paths":["\/documentation\/oneentry\/authorization"]}],"abstract":[{"text":"Management of user data such as password, names, etc.","type":"text"}],"primaryContentSections":[{"kind":"content","content":[{"anchor":"Overview","text":"Overview","level":2,"type":"heading"},{"type":"paragraph","inlineContent":[{"text":"User authorization works on the principle of token exchange.","type":"text"},{"type":"text","text":" "},{"text":"For the sake of simplicity, hide this process under the hood of the sdk. On","type":"text"},{"text":" ","type":"text"},{"type":"text","text":"You always have the opportunity to get all the data for more detailed configuration."},{"type":"text","text":" "},{"type":"text","text":"Tokens are automatically saved in a keychain to implement auto login."}]},{"level":2,"anchor":"Authorization","type":"heading","text":"Authorization"},{"code":["let email = \"oneentry@sample.com\"","try await AuthService.shared.auth(\"email\") {","    AuthData(marker: \"email_auth\", value: email)","    AuthData(marker: \"pass_auth\", value: \"password\")","}"],"type":"codeListing","syntax":"swift"},{"type":"paragraph","inlineContent":[{"type":"text","text":"This method performs obtaining authorization tokens. SDK independently monitor their relevance."}]},{"text":"Getting a user","type":"heading","anchor":"Getting-a-user","level":2},{"style":"important","name":"Important","type":"aside","content":[{"type":"paragraph","inlineContent":[{"text":"The method for obtaining user information is available only after successful authorization via sdk","type":"text"}]}]},{"syntax":"swift","type":"codeListing","code":["let user = try await AuthService.shared.user"]},{"type":"heading","text":"Logout","anchor":"Logout","level":2},{"type":"paragraph","inlineContent":[{"text":"In fact, the output can be implemented in different ways and without this method.","type":"text"},{"type":"text","text":" "},{"text":"However, its call is necessary to cancel authorization tokens","type":"text"}]},{"style":"important","name":"Important","content":[{"type":"paragraph","inlineContent":[{"text":"The method for obtaining user information is available only after successful authorization via sdk","type":"text"}]}],"type":"aside"},{"syntax":"swift","code":["let success = try await AuthService.shared.logout()"],"type":"codeListing"},{"level":2,"type":"heading","anchor":"Changing-user-data","text":"Changing user data"},{"inlineContent":[{"type":"text","text":"The method helps to change any data, including the password."}],"type":"paragraph"},{"type":"aside","name":"Important","content":[{"type":"paragraph","inlineContent":[{"text":"The method for obtaining user information is available only after successful authorization via sdk","type":"text"}]}],"style":"important"},{"syntax":"swift","code":["let success = try await service.changeUser(form: \"email_auth\", langCode: \"en_US\") {","    AuthDataContainer {","        AuthData(","            marker: \"pass_auth\",","            value: \"password\"","        )","    }","    ","    FormDataContainer {","        FormData(","            marker: \"name_auth\",","            value: \"Arthur\"","        )","    }","}"],"type":"codeListing"}]}],"references":{"doc://OneEntry/documentation/OneEntry":{"type":"topic","identifier":"doc:\/\/OneEntry\/documentation\/OneEntry","abstract":[{"text":"Simplifying Mobile App Development in Swift with OneEntry SDK","type":"text"}],"images":[{"type":"icon","identifier":"oneentry-logo.png"}],"role":"collection","title":"OneEntry","kind":"symbol","url":"\/documentation\/oneentry"},"doc://OneEntry/documentation/OneEntry/Registration":{"url":"\/documentation\/oneentry\/registration","role":"article","abstract":[{"text":"Registration and activation of new users. Verification using activation code.","type":"text"}],"title":"User registration and activation","kind":"article","identifier":"doc:\/\/OneEntry\/documentation\/OneEntry\/Registration","type":"topic"},"oneentry-logo.png":{"alt":"A technology icon representing the SlothCreator framework.","variants":[{"url":"\/images\/OneEntry\/oneentry-logo@2x.png","traits":["2x","light"]}],"identifier":"oneentry-logo.png","type":"image"},"doc://OneEntry/documentation/OneEntry/AuthUsage":{"role":"collectionGroup","type":"topic","kind":"article","title":"AuthService","abstract":[{"text":"OneEntry supports user creation and control. This can be useful for creating various kinds of content such as bonus programs, delivery addresses, etc.","type":"text"}],"identifier":"doc:\/\/OneEntry\/documentation\/OneEntry\/AuthUsage","url":"\/documentation\/oneentry\/authusage"},"doc://OneEntry/documentation/OneEntry/ForgotPassword":{"role":"collectionGroup","type":"topic","kind":"article","title":"Changing the password in case of loss of access to the account","abstract":[{"text":"Changing the password in case the user has forgotten it","type":"text"}],"identifier":"doc:\/\/OneEntry\/documentation\/OneEntry\/ForgotPassword","url":"\/documentation\/oneentry\/forgotpassword"}}}